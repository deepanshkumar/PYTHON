import requests
import pandas as pd

# Define your Cymulate API token and endpoints
API_TOKEN = 'your_cymulate_api_token'
HISTORY_API_URL = 'https://api.cymulate.com/v1/assessments/history'
TECH_HISTORY_API_URL = 'https://api.cymulate.com/v1/assessments/technical_history'

# Function to fetch assessment IDs from history API
def fetch_assessment_ids():
    headers = {
        'Authorization': f'Bearer {API_TOKEN}',
        'Content-Type': 'application/json'
    }

    response = requests.get(HISTORY_API_URL, headers=headers)
    data = response.json()

    assessment_ids = [assessment['id'] for assessment in data['assessments']]
    return assessment_ids

# Function to fetch results for a specific assessment ID using technical history API
def fetch_assessment_results(assessment_id):
    headers = {
        'Authorization': f'Bearer {API_TOKEN}',
        'Content-Type': 'application/json'
    }

    response = requests.get(f'{TECH_HISTORY_API_URL}/{assessment_id}', headers=headers)
    data = response.json()

    results = []

    for result in data['results']:
        attack_payload = result.get('payload')
        name = result.get('name')
        timestamp = result.get('timestamp')
        sha256 = result.get('sha256')
        sha1 = result.get('sha1')
        attack_vector = result.get('attack_vector')
        endpoint_address = result.get('endpoint_address')

        results.append({
            'Assessment ID': assessment_id,
            'Attack Payload': attack_payload,
            'Name': name,
            'Timestamp': timestamp,
            'SHA-256': sha256,
            'SHA-1': sha1,
            'Attack Vector': attack_vector,
            'Endpoint Address': endpoint_address
        })

    return results

# Main function
def main():
    # Fetch assessment IDs
    assessment_ids = fetch_assessment_ids()

    all_results = []

    # Fetch results for each assessment ID
    for assessment_id in assessment_ids:
        results = fetch_assessment_results(assessment_id)
        all_results.extend(results)

    # Convert results to DataFrame and save to Excel
    df = pd.DataFrame(all_results)
    df.to_excel('cymulate_assessment_results.xlsx', index=False)

    print('Results have been saved to cymulate_assessment_results.xlsx')

if __name__ == '__main__':
    main()
